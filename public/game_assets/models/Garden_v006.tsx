/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 garden_v006.glb --transform --precision=10 --shadows --keepnames --meta --types
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    blue_hat_collider: THREE.SkinnedMesh;
    blue_overalls_collider: THREE.SkinnedMesh;
    drawer_collider: THREE.SkinnedMesh;
    gardening_and_sunglasses_collider: THREE.SkinnedMesh;
    gardening_gloves_collider: THREE.SkinnedMesh;
    green_hat_collider: THREE.SkinnedMesh;
    hoe_collider: THREE.SkinnedMesh;
    orange_overalls_collider: THREE.SkinnedMesh;
    paint_cans_collider: THREE.SkinnedMesh;
    philips_screwdriver_collider: THREE.SkinnedMesh;
    pitchfork_collider: THREE.SkinnedMesh;
    rake_collider: THREE.SkinnedMesh;
    red_hat_collider: THREE.SkinnedMesh;
    seed_packets_collider: THREE.SkinnedMesh;
    shovel_collider: THREE.SkinnedMesh;
    slotted_screwdriver_collider: THREE.SkinnedMesh;
    wood_glue_collider: THREE.SkinnedMesh;
    wood_scraps_collider: THREE.SkinnedMesh;
    garden: THREE.Mesh;
    root_bone: THREE.Bone;
    paint_cans_bone: THREE.Bone;
    seed_packets_bone: THREE.Bone;
    gardening_gloves_bone: THREE.Bone;
    wood_glue_bone: THREE.Bone;
    red_hat_bone: THREE.Bone;
    green_hat_bone: THREE.Bone;
    blue_hat_bone: THREE.Bone;
    orange_overalls_bone: THREE.Bone;
    rake_bone: THREE.Bone;
    shovel_bone: THREE.Bone;
    hoe_bone: THREE.Bone;
    pitchfork_bone: THREE.Bone;
    gardening_and_sunglasses_bone: THREE.Bone;
    wood_scraps_bone: THREE.Bone;
    blue_overalls_bone: THREE.Bone;
    drawer_bone: THREE.Bone;
    slotted_screwdriver_bone: THREE.Bone;
    philips_screwdriver_bone: THREE.Bone;
  };
  materials: {
    colliders: THREE.MeshStandardMaterial;
    VertexColors_PBR: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/garden_v006-transformed.glb",
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Armature" userData={{ name: "Armature" }}>
        <primitive object={nodes.root_bone} />
        <primitive object={nodes.paint_cans_bone} />
        <primitive object={nodes.seed_packets_bone} />
        <primitive object={nodes.gardening_gloves_bone} />
        <primitive object={nodes.wood_glue_bone} />
        <primitive object={nodes.red_hat_bone} />
        <primitive object={nodes.green_hat_bone} />
        <primitive object={nodes.blue_hat_bone} />
        <primitive object={nodes.orange_overalls_bone} />
        <primitive object={nodes.rake_bone} />
        <primitive object={nodes.shovel_bone} />
        <primitive object={nodes.hoe_bone} />
        <primitive object={nodes.pitchfork_bone} />
        <primitive object={nodes.gardening_and_sunglasses_bone} />
        <primitive object={nodes.wood_scraps_bone} />
        <primitive object={nodes.blue_overalls_bone} />
        <primitive object={nodes.drawer_bone} />
        <primitive object={nodes.slotted_screwdriver_bone} />
        <primitive object={nodes.philips_screwdriver_bone} />
        <skinnedMesh
          name="blue_hat_collider"
          geometry={nodes.blue_hat_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.blue_hat_collider.skeleton}
          userData={{ name: "blue_hat_collider" }}
        />
        <skinnedMesh
          name="blue_overalls_collider"
          geometry={nodes.blue_overalls_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.blue_overalls_collider.skeleton}
          userData={{ name: "blue_overalls_collider" }}
        />
        <skinnedMesh
          name="drawer_collider"
          geometry={nodes.drawer_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.drawer_collider.skeleton}
          userData={{ name: "drawer_collider" }}
        />
        <skinnedMesh
          name="gardening_and_sunglasses_collider"
          geometry={nodes.gardening_and_sunglasses_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.gardening_and_sunglasses_collider.skeleton}
          userData={{ name: "gardening_and_sunglasses_collider" }}
        />
        <skinnedMesh
          name="gardening_gloves_collider"
          geometry={nodes.gardening_gloves_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.gardening_gloves_collider.skeleton}
          userData={{ name: "gardening_gloves_collider" }}
        />
        <skinnedMesh
          name="green_hat_collider"
          geometry={nodes.green_hat_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.green_hat_collider.skeleton}
          userData={{ name: "green_hat_collider" }}
        />
        <skinnedMesh
          name="hoe_collider"
          geometry={nodes.hoe_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.hoe_collider.skeleton}
          userData={{ name: "hoe_collider" }}
        />
        <skinnedMesh
          name="orange_overalls_collider"
          geometry={nodes.orange_overalls_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.orange_overalls_collider.skeleton}
          userData={{ name: "orange_overalls_collider" }}
        />
        <skinnedMesh
          name="paint_cans_collider"
          geometry={nodes.paint_cans_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.paint_cans_collider.skeleton}
          userData={{ name: "paint_cans_collider" }}
        />
        <skinnedMesh
          name="philips_screwdriver_collider"
          geometry={nodes.philips_screwdriver_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.philips_screwdriver_collider.skeleton}
          userData={{ name: "philips_screwdriver_collider" }}
        />
        <skinnedMesh
          name="pitchfork_collider"
          geometry={nodes.pitchfork_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.pitchfork_collider.skeleton}
          userData={{ name: "pitchfork_collider" }}
        />
        <skinnedMesh
          name="rake_collider"
          geometry={nodes.rake_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.rake_collider.skeleton}
          userData={{ name: "rake_collider" }}
        />
        <skinnedMesh
          name="red_hat_collider"
          geometry={nodes.red_hat_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.red_hat_collider.skeleton}
          userData={{ name: "red_hat_collider" }}
        />
        <skinnedMesh
          name="seed_packets_collider"
          geometry={nodes.seed_packets_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.seed_packets_collider.skeleton}
          userData={{ name: "seed_packets_collider" }}
        />
        <skinnedMesh
          name="shovel_collider"
          geometry={nodes.shovel_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.shovel_collider.skeleton}
          userData={{ name: "shovel_collider" }}
        />
        <skinnedMesh
          name="slotted_screwdriver_collider"
          geometry={nodes.slotted_screwdriver_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.slotted_screwdriver_collider.skeleton}
          userData={{ name: "slotted_screwdriver_collider" }}
        />
        <skinnedMesh
          name="wood_glue_collider"
          geometry={nodes.wood_glue_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.wood_glue_collider.skeleton}
          userData={{ name: "wood_glue_collider" }}
        />
        <skinnedMesh
          name="wood_scraps_collider"
          geometry={nodes.wood_scraps_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.wood_scraps_collider.skeleton}
          userData={{ name: "wood_scraps_collider" }}
        />
      </group>
      <mesh
        name="garden"
        castShadow
        receiveShadow
        geometry={nodes.garden.geometry}
        material={materials.VertexColors_PBR}
        position={[0.1345324218, 0.0302855372, 2.0220003128]}
        userData={{ name: "garden" }}
      />
    </group>
  );
}

useGLTF.preload("/garden_v006-transformed.glb");
