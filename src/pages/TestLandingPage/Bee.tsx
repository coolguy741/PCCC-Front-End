/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useEffect, useRef } from "react";

export function Bee({ pos }: any) {
  const group: any = useRef();
  const { nodes, materials, animations }: any = useGLTF("/models/bee.glb");
  const { actions } = useAnimations(animations, group);

  const width = window.innerWidth;
  const height = window.innerHeight;
  const aspect = width / height;

  useEffect(() => {
    if (actions.Sunny_happyIdle) {
      actions.Sunny_happyIdle.play();
    }
  }, []);

  useFrame(() => {
    group.current.rotation.y += 0.01;
  });

  // Calculate camera unit size
  const calculateUnitSize = () => {
    const fov = 75; // default camera value
    const cameraZ = 5; // default camera value

    const vFov = (fov * Math.PI) / 180;

    const unitHeight = 2 * Math.tan(vFov / 2) * cameraZ;
    const unitWidth = unitHeight * aspect;

    return { unitWidth, unitHeight };
  };

  const { unitWidth, unitHeight } = calculateUnitSize();

  return (
    <group
      ref={group}
      dispose={null}
      scale={[3, 3, 3]}
      position={[
        -(unitWidth / 2) + pos.x / unitWidth / 10,
        unitHeight / 2 - pos.y / unitHeight / 15,
        0,
      ]}
    >
      <group name="Scene">
        <group name="BeeArmature">
          <primitive object={nodes.root} />
          <primitive object={nodes.IK_hand_L} />
          <primitive object={nodes.IK_hand_R} />
          <primitive object={nodes.IK_foreFoot_L} />
          <primitive object={nodes.IK_foreFoot_R} />
          <primitive object={nodes.IK_hindFoot_L} />
          <primitive object={nodes.IK_hindFoot_R} />
          <primitive object={nodes.IK_antennaTip_L} />
          <primitive object={nodes.IK_antennaTip_R} />
          <primitive object={nodes.properties} />
          <primitive object={nodes.neutral_bone} />
          <group name="BeeBody">
            <skinnedMesh
              name="Cube017"
              geometry={nodes.Cube017.geometry}
              material={materials.body}
              skeleton={nodes.Cube017.skeleton}
            />
            <skinnedMesh
              name="Cube017_1"
              geometry={nodes.Cube017_1.geometry}
              material={materials.blackout}
              skeleton={nodes.Cube017_1.skeleton}
            />
            <skinnedMesh
              name="Cube017_2"
              geometry={nodes.Cube017_2.geometry}
              material={materials["Material.002"]}
              skeleton={nodes.Cube017_2.skeleton}
            />
            <skinnedMesh
              name="Cube017_3"
              geometry={nodes.Cube017_3.geometry}
              material={materials.cornea}
              skeleton={nodes.Cube017_3.skeleton}
            />
            <skinnedMesh
              name="Cube017_4"
              geometry={nodes.Cube017_4.geometry}
              material={materials["Material.001"]}
              skeleton={nodes.Cube017_4.skeleton}
            />
            <skinnedMesh
              name="Cube017_5"
              geometry={nodes.Cube017_5.geometry}
              material={materials.eyes}
              skeleton={nodes.Cube017_5.skeleton}
            />
            <skinnedMesh
              name="Cube017_6"
              geometry={nodes.Cube017_6.geometry}
              material={materials.tongue}
              skeleton={nodes.Cube017_6.skeleton}
            />
            <skinnedMesh
              name="Cube017_7"
              geometry={nodes.Cube017_7.geometry}
              material={materials.wings}
              skeleton={nodes.Cube017_7.skeleton}
            />
            <skinnedMesh
              name="Cube017_8"
              geometry={nodes.Cube017_8.geometry}
              material={materials.wingsSpeedLines}
              skeleton={nodes.Cube017_8.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/bee.glb");
