/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 garden_v004.glb --transform --precision=10 --shadows --keepnames --meta --types
*/

import { useGLTF } from "@react-three/drei";
import { gsap } from "gsap";
import { memo, useCallback, useEffect } from "react";
import { Bone, MeshStandardMaterial, SkinnedMesh } from "three";
import { GLTF } from "three-stdlib";
import { shallow } from "zustand/shallow";
import { useGlobalState } from "../../../../../globalState/useGlobalState";
import { BACK_17_IN } from "../../../../../shared/Eases/Eases";
import InteractiveGameEntity from "../../1-InteractiveGameEntity/InteractiveGameEntity";

type GLTFResult = GLTF & {
  nodes: {
    bucket_collider: SkinnedMesh;
    drawer_collider: SkinnedMesh;
    garden: SkinnedMesh;
    gloves_collider: SkinnedMesh;
    hat_01_collider: SkinnedMesh;
    hat_02_collider: SkinnedMesh;
    hat_03_collider: SkinnedMesh;
    hoe_collider: SkinnedMesh;
    old_clothing_01_collider: SkinnedMesh;
    old_clothing_02_collider: SkinnedMesh;
    paint_cans_collider: SkinnedMesh;
    pitchfork_collider: SkinnedMesh;
    rake_collider: SkinnedMesh;
    scarecrow_hat_collider: SkinnedMesh;
    screwdriver_phillips_collider: SkinnedMesh;
    screwdriver_slot_collider: SkinnedMesh;
    seed_packets_collider: SkinnedMesh;
    spade_collider: SkinnedMesh;
    sun_glasses_collider: SkinnedMesh;
    wood_glue_collider: SkinnedMesh;
    wood_scraps_collider: SkinnedMesh;
    root_bone: Bone;
    bucket_bone: Bone;
    paint_cans_bone: Bone;
    seed_packets_bone: Bone;
    sun_glasses_bone: Bone;
    gloves_bone: Bone;
    wood_glue_bone: Bone;
    hat_02_bone: Bone;
    hat_03_bone: Bone;
    scarecrow_hat_bone: Bone;
    old_clothing_01_bone: Bone;
    rake_bone: Bone;
    spade_bone: Bone;
    hoe_bone: Bone;
    pitchfork_bone: Bone;
    hat_01_bone: Bone;
    wood_scraps_bone: Bone;
    old_clothing_02_bone: Bone;
    drawer_bone: Bone;
    screwdriver_slot_bone: Bone;
    screwdriver_phillips_bone: Bone;
  };
  materials: {
    colliders: MeshStandardMaterial;
    VertexColors_PBR: MeshStandardMaterial;
  };
};

const GardenTemp = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF(
    "/game_assets/models/garden_v004-transformed.glb",
  ) as GLTFResult;

  // Global State
  const { activeToolInventory } = useGlobalState(
    (state) => ({
      menuActive: state.menuActive,
      activeHoveredEntity: state.activeHoveredEntity,
      activeToolInventory: state.activeToolInventory,
      activeMiscInventory: state.activeMiscInventory,
      activeIngredientInventory: state.activeIngredientInventory,
    }),
    shallow,
  );

  const handleAnimNodeOut = useCallback(() => {
    // if (!menuActive) return;
    // if (!activeHoveredEntity) return;

    // const itemImgName = InspectData[activeHoveredEntity].imgName;

    if (activeToolInventory.length <= 0) return;

    if (
      activeToolInventory[activeToolInventory.length - 1].itemName ===
      "gardening_hat"
    ) {
      gsap.to(nodes.hat_01_bone.scale, {
        duration: 0.25,
        delay: 0.5,
        x: 0,
        y: 0,
        z: 0,
        overwrite: true,
        ease: BACK_17_IN,
      });
    }

    if (
      activeToolInventory[activeToolInventory.length - 1].itemName ===
      "gardening_gloves"
    ) {
      gsap.to(nodes.gloves_bone.scale, {
        duration: 0.25,
        delay: 0.5,
        x: 0,
        y: 0,
        z: 0,
        overwrite: true,
        ease: BACK_17_IN,
      });
    }

    if (
      activeToolInventory[activeToolInventory.length - 1].itemName === "shovel"
    ) {
      gsap.to(nodes.spade_bone.scale, {
        duration: 0.25,
        delay: 0.5,
        x: 0,
        y: 0,
        z: 0,
        overwrite: true,
        ease: BACK_17_IN,
      });
    }

    if (
      activeToolInventory[activeToolInventory.length - 1].itemName === "rake"
    ) {
      gsap.to(nodes.rake_bone.scale, {
        duration: 0.25,
        delay: 0.5,
        x: 0,
        y: 0,
        z: 0,
        overwrite: true,
        ease: BACK_17_IN,
      });
    }
  }, [nodes, activeToolInventory]);

  useEffect(() => {
    handleAnimNodeOut();
  }, [handleAnimNodeOut, activeToolInventory]);

  // useFrame(({ clock }) => {
  //   nodes.hat_01_bone.scale.x =
  //     nodes.hat_01_bone.scale.y =
  //     nodes.hat_01_bone.scale.z =
  //       Math.sin(clock.getElapsedTime() * 0.5) * 0.5 + 1.5;
  // });

  return (
    <group {...props} dispose={null}>
      <group name="Armature" userData={{ name: "Armature" }}>
        {/* <primitive object={nodes.root_bone} /> */}
        {/* <primitive object={nodes.bucket_bone} /> */}
        {/* <primitive object={nodes.paint_cans_bone} /> */}
        {/* <primitive object={nodes.seed_packets_bone} /> */}
        {/* <primitive object={nodes.sun_glasses_bone} /> */}
        {/* <primitive object={nodes.gloves_bone} /> */}
        {/* <primitive object={nodes.wood_glue_bone} /> */}
        {/* <primitive object={nodes.hat_02_bone} /> */}
        {/* <primitive object={nodes.hat_03_bone} /> */}
        {/* <primitive object={nodes.scarecrow_hat_bone} /> */}
        {/* <primitive object={nodes.old_clothing_01_bone} /> */}
        {/* <primitive object={nodes.rake_bone} /> */}
        {/* <primitive object={nodes.spade_bone} /> */}
        {/* <primitive object={nodes.hoe_bone} /> */}
        {/* <primitive object={nodes.pitchfork_bone} /> */}
        {/* <primitive object={nodes.hat_01_bone} /> */}
        {/* <primitive object={nodes.wood_scraps_bone} /> */}
        {/* <primitive object={nodes.old_clothing_02_bone} /> */}
        {/* <primitive object={nodes.drawer_bone} /> */}
        {/* <primitive object={nodes.screwdriver_slot_bone} /> */}
        {/* <primitive object={nodes.screwdriver_phillips_bone} /> */}
        <InteractiveGameEntity
          name={"Gardening Gloves"}
          bone={nodes.gloves_bone}
          skeleton={nodes.gloves_collider.skeleton}
          geometry={nodes.gloves_collider.geometry}
        />
        {/* <skinnedMesh
          name="gardening_gloves"
          geometry={nodes.gloves_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.gloves_collider.skeleton}
          userData={{ name: "gloves_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Gardening Hat and Sunglasses"}
          bone={nodes.hat_01_bone}
          skeleton={nodes.hat_01_collider.skeleton}
          geometry={nodes.hat_01_collider.geometry}
        />
        {/* <skinnedMesh
          name="hat_01_collider"
          geometry={nodes.hat_01_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.hat_01_collider.skeleton}
          userData={{ name: "hat_01_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Shovel"}
          bone={nodes.spade_bone}
          skeleton={nodes.spade_collider.skeleton}
          geometry={nodes.spade_collider.geometry}
        />
        {/* <skinnedMesh
          name="spade_collider"
          geometry={nodes.spade_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.spade_collider.skeleton}
          userData={{ name: "spade_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Drawer"}
          bone={nodes.drawer_bone}
          skeleton={nodes.drawer_collider.skeleton}
          geometry={nodes.drawer_collider.geometry}
        />
        {/* <skinnedMesh
          name="drawer_collider"
          onPointerEnter={() => console.log("drawer_collider")}
          geometry={nodes.drawer_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.drawer_collider.skeleton}
          userData={{ name: "drawer_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Rake"}
          bone={nodes.rake_bone}
          skeleton={nodes.rake_collider.skeleton}
          geometry={nodes.rake_collider.geometry}
        />
        {/* <skinnedMesh
          name="rake_collider"
          geometry={nodes.rake_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.rake_collider.skeleton}
          userData={{ name: "rake_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Seed Packets"}
          bone={nodes.seed_packets_bone}
          skeleton={nodes.seed_packets_collider.skeleton}
          geometry={nodes.seed_packets_collider.geometry}
        />
        {/* <skinnedMesh
          name="seed_packets_collider"
          geometry={nodes.seed_packets_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.seed_packets_collider.skeleton}
          userData={{ name: "seed_packets_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Sunglasses"}
          bone={nodes.sun_glasses_bone}
          skeleton={nodes.sun_glasses_collider.skeleton}
          geometry={nodes.sun_glasses_collider.geometry}
        />
        {/* <skinnedMesh
          name="sun_glasses_collider"
          geometry={nodes.sun_glasses_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.sun_glasses_collider.skeleton}
          userData={{ name: "sun_glasses_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Phillips Screwdriver"}
          bone={nodes.screwdriver_phillips_bone}
          skeleton={nodes.screwdriver_phillips_collider.skeleton}
          geometry={nodes.screwdriver_phillips_collider.geometry}
        />
        {/* <skinnedMesh
          name="screwdriver_phillips_collider"
          geometry={nodes.screwdriver_phillips_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.screwdriver_phillips_collider.skeleton}
          userData={{ name: "screwdriver_phillips_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Slotted Screwdriver"}
          bone={nodes.screwdriver_slot_bone}
          skeleton={nodes.screwdriver_slot_collider.skeleton}
          geometry={nodes.screwdriver_slot_collider.geometry}
        />
        {/* <skinnedMesh
          name="screwdriver_slot_collider"
          geometry={nodes.screwdriver_slot_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.screwdriver_slot_collider.skeleton}
          userData={{ name: "screwdriver_slot_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Hoe"}
          bone={nodes.hoe_bone}
          skeleton={nodes.hoe_collider.skeleton}
          geometry={nodes.hoe_collider.geometry}
        />
        {/* <skinnedMesh
          name="hoe_collider"
          geometry={nodes.hoe_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.hoe_collider.skeleton}
          userData={{ name: "hoe_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Wood Glue"}
          bone={nodes.wood_glue_bone}
          skeleton={nodes.wood_glue_collider.skeleton}
          geometry={nodes.wood_glue_collider.geometry}
        />
        {/* <skinnedMesh
          name="wood_glue_collider"
          geometry={nodes.wood_glue_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.wood_glue_collider.skeleton}
          userData={{ name: "wood_glue_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Wood Scraps"}
          bone={nodes.wood_scraps_bone}
          skeleton={nodes.wood_scraps_collider.skeleton}
          geometry={nodes.wood_scraps_collider.geometry}
        />
        {/* <skinnedMesh
          name="wood_scraps_collider"
          geometry={nodes.wood_scraps_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.wood_scraps_collider.skeleton}
          userData={{ name: "wood_scraps_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Pitch Fork"}
          bone={nodes.pitchfork_bone}
          skeleton={nodes.pitchfork_collider.skeleton}
          geometry={nodes.pitchfork_collider.geometry}
        />
        {/* <skinnedMesh
          name="pitchfork_collider"
          geometry={nodes.pitchfork_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.pitchfork_collider.skeleton}
          userData={{ name: "pitchfork_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Paint Cans"}
          bone={nodes.paint_cans_bone}
          skeleton={nodes.paint_cans_collider.skeleton}
          geometry={nodes.paint_cans_collider.geometry}
        />
        {/* <skinnedMesh
          name="paint_cans_collider"
          geometry={nodes.paint_cans_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.paint_cans_collider.skeleton}
          userData={{ name: "paint_cans_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Red Straw Hat"}
          bone={nodes.hat_02_bone}
          skeleton={nodes.hat_02_collider.skeleton}
          geometry={nodes.hat_02_collider.geometry}
        />
        {/* <skinnedMesh
          name="hat_02_collider"
          geometry={nodes.hat_02_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.hat_02_collider.skeleton}
          userData={{ name: "hat_02_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Green Straw Hat"}
          bone={nodes.hat_03_bone}
          skeleton={nodes.hat_03_collider.skeleton}
          geometry={nodes.hat_03_collider.geometry}
        />
        {/* <skinnedMesh
          name="hat_03_collider"
          geometry={nodes.hat_03_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.hat_03_collider.skeleton}
          userData={{ name: "hat_03_collider" }}
        /> */}

        <InteractiveGameEntity
          name={"Blue Straw Hat"}
          bone={nodes.scarecrow_hat_bone}
          skeleton={nodes.scarecrow_hat_collider.skeleton}
          geometry={nodes.scarecrow_hat_collider.geometry}
        />
        {/* <skinnedMesh
          name="scarecrow_hat_collider"
          geometry={nodes.scarecrow_hat_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.scarecrow_hat_collider.skeleton}
          userData={{ name: "scarecrow_hat_collider" }}
        /> */}

        <skinnedMesh
          name="garden"
          geometry={nodes.garden.geometry}
          material={materials.VertexColors_PBR}
          skeleton={nodes.garden.skeleton}
          userData={{ name: "garden" }}
        />

        {/* <skinnedMesh
          name="bucket_collider"
          geometry={nodes.bucket_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.bucket_collider.skeleton}
          userData={{ name: "bucket_collider" }}
        />
        <skinnedMesh
          name="old_clothing_01_collider"
          geometry={nodes.old_clothing_01_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.old_clothing_01_collider.skeleton}
          userData={{ name: "old_clothing_01_collider" }}
        />
        <skinnedMesh
          name="old_clothing_02_collider"
          geometry={nodes.old_clothing_02_collider.geometry}
          material={materials.colliders}
          skeleton={nodes.old_clothing_02_collider.skeleton}
          userData={{ name: "old_clothing_02_collider" }}
        /> */}
      </group>
    </group>
  );
};

useGLTF.preload("/game_assets/models/garden_v004-transformed.glb");

export default memo(GardenTemp);
