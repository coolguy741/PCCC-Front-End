/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 pccc_garden_merged_v003.glb --transform --precision=10 --shadows --keepnames --meta --types
*/

import { useGLTF } from "@react-three/drei";
import { memo, useCallback } from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import { shallow } from "zustand/shallow";
import { useGlobalState } from "../../../globalState/useGlobalState";

type GLTFResult = GLTF & {
  nodes: {
    Mesh001: THREE.Mesh;
    Mesh001_1: THREE.Mesh;
    Mesh001_2: THREE.Mesh;
    Mesh001_3: THREE.Mesh;
    Mesh001_4: THREE.Mesh;
    Mesh001_5: THREE.Mesh;
    Mesh001_6: THREE.Mesh;
    Mesh001_7: THREE.Mesh;
    Mesh001_8: THREE.Mesh;
    Mesh001_9: THREE.Mesh;
    Mesh001_10: THREE.Mesh;
    Mesh001_11: THREE.Mesh;
    Mesh001_12: THREE.Mesh;
    Mesh001_13: THREE.Mesh;
    Mesh001_14: THREE.Mesh;
    Mesh001_15: THREE.Mesh;
    Mesh001_16: THREE.Mesh;
    Mesh001_17: THREE.Mesh;
    Mesh001_18: THREE.Mesh;
    Mesh001_19: THREE.Mesh;
    Mesh001_20: THREE.Mesh;
    Mesh001_21: THREE.Mesh;
    Mesh001_22: THREE.Mesh;
    Mesh001_23: THREE.Mesh;
    Mesh001_24: THREE.Mesh;
  };
  materials: {
    ["Beige.002"]: THREE.MeshStandardMaterial;
    ["lambert2.001"]: THREE.MeshStandardMaterial;
    ["Dark_Brown.003"]: THREE.MeshStandardMaterial;
    ["Metal.002"]: THREE.MeshStandardMaterial;
    ["Brown.001"]: THREE.MeshStandardMaterial;
    ["Dark_Green.004"]: THREE.MeshStandardMaterial;
    ["Grey.001"]: THREE.MeshStandardMaterial;
    ["Light_Green.002"]: THREE.MeshStandardMaterial;
    ["Orange.002"]: THREE.MeshStandardMaterial;
    ["Light_Beige.002"]: THREE.MeshStandardMaterial;
    ["Glass.001"]: THREE.MeshStandardMaterial;
    ["Dark_Green.005"]: THREE.MeshStandardMaterial;
    ["Water.001"]: THREE.MeshStandardMaterial;
    ["farm_pack.001"]: THREE.MeshStandardMaterial;
    ["Red.001"]: THREE.MeshStandardMaterial;
    ["Yellow.001"]: THREE.MeshStandardMaterial;
  };
};
const Garden = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF(
    "/game_assets/models/pccc_garden_merged_v003-transformed.glb",
  ) as GLTFResult;

  // Global State
  const { setMenuActive } = useGlobalState(
    (state) => ({
      setMenuActive: state.setMenuActive,
    }),
    shallow,
  );

  const handleTempMenuExit = useCallback(() => {
    setMenuActive(false);
  }, [setMenuActive]);

  return (
    <group {...props} dispose={null} onClick={handleTempMenuExit}>
      <group
        name="MergedEnvironment001"
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.0099999998, 0.0099999979, 0.0099999979]}
        userData={{ name: "MergedEnvironment.001" }}
      >
        <mesh
          name="Mesh001"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001.geometry}
          material={materials["Beige.002"]}
        />
        <mesh
          name="Mesh001_1"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_1.geometry}
          material={materials["lambert2.001"]}
        />
        <mesh
          name="Mesh001_2"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_2.geometry}
          material={materials["Dark_Brown.003"]}
        />
        <mesh
          name="Mesh001_3"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_3.geometry}
          material={materials["Metal.002"]}
        />
        <mesh
          name="Mesh001_4"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_4.geometry}
          material={materials["Brown.001"]}
        />
        <mesh
          name="Mesh001_5"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_5.geometry}
          material={materials["Dark_Green.004"]}
        />
        <mesh
          name="Mesh001_6"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_6.geometry}
          material={materials["Grey.001"]}
        />
        <mesh
          name="Mesh001_7"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_7.geometry}
          material={materials["Light_Green.002"]}
        />
        <mesh
          name="Mesh001_8"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_8.geometry}
          material={materials["Orange.002"]}
        />
        <mesh
          name="Mesh001_9"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_9.geometry}
          material={materials["Light_Beige.002"]}
        />
        <mesh
          name="Mesh001_10"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_10.geometry}
          material={materials["Glass.001"]}
        />
        <mesh
          name="Mesh001_11"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_11.geometry}
          material={materials["Dark_Green.005"]}
        />
        <mesh
          name="Mesh001_12"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_12.geometry}
          material={materials["Water.001"]}
        />
        <mesh
          name="Mesh001_13"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_13.geometry}
          material={materials["farm_pack.001"]}
        />
        <mesh
          name="Mesh001_14"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_14.geometry}
          material={materials["Red.001"]}
        />
        <mesh
          name="Mesh001_15"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_15.geometry}
          material={materials["Dark_Brown.003"]}
        />
        <mesh
          name="Mesh001_16"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_16.geometry}
          material={materials["Light_Green.002"]}
        />
        <mesh
          name="Mesh001_17"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_17.geometry}
          material={materials["Dark_Green.004"]}
        />
        <mesh
          name="Mesh001_18"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_18.geometry}
          material={materials["Metal.002"]}
        />
        <mesh
          name="Mesh001_19"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_19.geometry}
          material={materials["Yellow.001"]}
        />
        <mesh
          name="Mesh001_20"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_20.geometry}
          material={materials["Beige.002"]}
        />
        <mesh
          name="Mesh001_21"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_21.geometry}
          material={materials["Light_Beige.002"]}
        />
        <mesh
          name="Mesh001_22"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_22.geometry}
          material={materials["Orange.002"]}
        />
        <mesh
          name="Mesh001_23"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_23.geometry}
          material={materials["Dark_Green.004"]}
        />
        <mesh
          name="Mesh001_24"
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_24.geometry}
          material={materials["Dark_Brown.003"]}
        />
      </group>
    </group>
  );
};

useGLTF.preload("/game_assets/models/pccc_garden_merged_v003-transformed.glb");

export default memo(Garden);
