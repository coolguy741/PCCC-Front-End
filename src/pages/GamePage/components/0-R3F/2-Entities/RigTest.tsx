/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 pccc_rig_test.glb --transform --precision=10 --shadows --keepnames --meta --types
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { memo, useEffect, useRef } from "react";
import {
  Bone,
  Group,
  Mesh,
  MeshStandardMaterial,
  SkeletonHelper,
  SkinnedMesh,
} from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    object_0: Bone;
    object_1: Bone;
    object_1_collider: Mesh;
    object_0_collider: Mesh;
    Sphere006: SkinnedMesh;
    Sphere006_1: SkinnedMesh;
    root: Bone;
  };
  materials: {
    Material: MeshStandardMaterial;
    ["Material.001"]: MeshStandardMaterial;
    ["Material.002"]: MeshStandardMaterial;
  };
};

const RigTest = (props: JSX.IntrinsicElements["group"]) => {
  const mainRef = useRef<SkinnedMesh | null>(null);
  const secondaryRef = useRef<SkinnedMesh | null>(null);
  const groupRef = useRef<Group | null>(null);

  const { nodes, materials, animations } = useGLTF(
    "/game_assets/models/pccc_rig_test-transformed.glb",
  ) as GLTFResult;
  const { actions } = useAnimations(animations, groupRef);
  const scene = useThree((state) => state.scene);

  useEffect(() => {
    if (mainRef.current) {
      const helperOne = new SkeletonHelper(mainRef.current);
      scene.add(helperOne);
    }

    if (secondaryRef.current) {
      const helperTwo = new SkeletonHelper(secondaryRef.current);
      scene.add(helperTwo);
    }

    actions.ArmatureAction?.play();
  }, [scene, actions]);

  console.log(nodes);

  useFrame((state, delta) => {
    nodes.object_0.rotation.x += 1 * delta;
    // nodes.object_1_collider.position.x = 1;
    // nodes.object_1_collider.visible = false;
  });

  return (
    <group {...props} dispose={null}>
      <group name="object_combined" userData={{ name: "object_combined" }}>
        <skinnedMesh
          name="Sphere006"
          ref={mainRef}
          geometry={nodes.Sphere006.geometry}
          material={materials["Material.001"]}
          skeleton={nodes.Sphere006.skeleton}
        />
        <skinnedMesh
          ref={secondaryRef}
          name="Sphere006_1"
          geometry={nodes.Sphere006_1.geometry}
          material={materials["Material.002"]}
          skeleton={nodes.Sphere006_1.skeleton}
        />
      </group>
      <primitive
        object={nodes.root}
        // visible={false}
        onClick={() => console.log("hey")}
      />
    </group>
  );
};

useGLTF.preload("/game_assets/models/pccc_rig_test-transformed.glb");

export default memo(RigTest);
