/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
created: Wed May 11 14:15:26 2022
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
const path = "/assets/glb/pancakes_LP2.glb"

export default function Model({rotation, ...props}) {
  const group = useRef();
  const { nodes, materials } = useGLTF(path);


  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.x = rotation[0] + Math.cos(t / 4) / 8
    group.current.rotation.y = rotation[1] + Math.sin(t / 4) / 8
    group.current.rotation.z = rotation[2] + Math.sin(t / 1.5) / 40
    group.current.position.y = Math.sin(t / 1.5) / 80
    //group.current.position.y = rotation[1] + Math.sin(t / 1.5) / 80
  })

  return (
      <group ref={group} {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Berry_01001.geometry}
          material={nodes.Berry_01001.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Berry_01_2001.geometry}
          material={nodes.Berry_01_2001.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Berry_01_3001.geometry}
          material={nodes.Berry_01_3001.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.cake_01_1001.geometry}
          material={nodes.cake_01_1001.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.cake_01001.geometry}
          material={nodes.cake_01001.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.pan001.geometry}
          material={nodes.pan001.material}
        />
      </group>
  );
}

useGLTF.preload(path);
